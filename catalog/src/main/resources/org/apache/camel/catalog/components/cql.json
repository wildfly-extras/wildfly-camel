{
 "component": {
    "kind": "component",
    "scheme": "cql",
    "syntax": "cql:beanRef:hosts:port/keyspace",
    "title": "Cassandra CQL",
    "description": "The cql component aims at integrating Cassandra 2.0 using the CQL3 API (not the Thrift API).",
    "label": "database,nosql",
    "deprecated": "false",
    "async": "false",
    "javaType": "org.apache.camel.component.cassandra.CassandraComponent",
    "groupId": "org.apache.camel",
    "artifactId": "camel-cassandraql",
    "version": "2.18.0"
  },
  "componentProperties": {
  },
  "properties": {
    "beanRef": { "kind": "path", "group": "common", "type": "string", "javaType": "java.lang.String", "deprecated": "false", "secret": "false", "description": "beanRef is defined using bean:id" },
    "hosts": { "kind": "path", "group": "common", "type": "string", "javaType": "java.lang.String", "deprecated": "false", "secret": "false", "description": "Hostname(s) cassansdra server(s). Multiple hosts can be separated by comma." },
    "port": { "kind": "path", "group": "common", "type": "integer", "javaType": "java.lang.Integer", "deprecated": "false", "secret": "false", "description": "Port number of cassansdra server(s)" },
    "keyspace": { "kind": "path", "group": "common", "type": "string", "javaType": "java.lang.String", "deprecated": "false", "secret": "false", "description": "Keyspace to use" },
    "cluster": { "kind": "parameter", "group": "common", "type": "object", "javaType": "com.datastax.driver.core.Cluster", "deprecated": "false", "secret": "false", "description": "To use the Cluster instance (you would normally not use this option)" },
    "clusterName": { "kind": "parameter", "group": "common", "type": "string", "javaType": "java.lang.String", "deprecated": "false", "secret": "false", "description": "Cluster name" },
    "consistencyLevel": { "kind": "parameter", "group": "common", "type": "string", "javaType": "com.datastax.driver.core.ConsistencyLevel", "enum": [ "ANY", "ONE", "TWO", "THREE", "QUORUM", "ALL", "LOCAL_QUORUM", "EACH_QUORUM", "SERIAL", "LOCAL_SERIAL", "LOCAL_ONE" ], "deprecated": "false", "secret": "false", "description": "Consistency level to use" },
    "cql": { "kind": "parameter", "group": "common", "type": "string", "javaType": "java.lang.String", "deprecated": "false", "secret": "false", "description": "CQL query to perform. Can be overridden with the message header with key CamelCqlQuery." },
    "loadBalancingPolicy": { "kind": "parameter", "group": "common", "type": "string", "javaType": "java.lang.String", "deprecated": "false", "secret": "false", "description": "To use a specific LoadBalancingPolicy" },
    "password": { "kind": "parameter", "group": "common", "type": "string", "javaType": "java.lang.String", "deprecated": "false", "secret": "false", "description": "Password for session authentication" },
    "prepareStatements": { "kind": "parameter", "group": "common", "type": "boolean", "javaType": "boolean", "deprecated": "false", "secret": "false", "defaultValue": "true", "description": "Whether to use PreparedStatements or regular Statements" },
    "resultSetConversionStrategy": { "kind": "parameter", "group": "common", "type": "string", "javaType": "java.lang.String", "deprecated": "false", "secret": "false", "description": "To use a custom class that implements logic for converting ResultSet into message body ALL ONE LIMIT_10 LIMIT_100..." },
    "session": { "kind": "parameter", "group": "common", "type": "object", "javaType": "com.datastax.driver.core.Session", "deprecated": "false", "secret": "false", "description": "To use the Session instance (you would normally not use this option)" },
    "username": { "kind": "parameter", "group": "common", "type": "string", "javaType": "java.lang.String", "deprecated": "false", "secret": "false", "description": "Username for session authentication" },
    "bridgeErrorHandler": { "kind": "parameter", "group": "consumer", "label": "consumer", "type": "boolean", "javaType": "boolean", "optionalPrefix": "consumer.", "deprecated": "false", "secret": "false", "defaultValue": "false", "description": "Allows for bridging the consumer to the Camel routing Error Handler which mean any exceptions occurred while the consumer is trying to pickup incoming messages or the likes will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions that will be logged at WARN/ERROR level and ignored." },
    "exceptionHandler": { "kind": "parameter", "group": "consumer (advanced)", "label": "consumer,advanced", "type": "object", "javaType": "org.apache.camel.spi.ExceptionHandler", "optionalPrefix": "consumer.", "deprecated": "false", "secret": "false", "description": "To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this options is not in use. By default the consumer will deal with exceptions that will be logged at WARN/ERROR level and ignored." },
    "exchangePattern": { "kind": "parameter", "group": "consumer (advanced)", "label": "consumer,advanced", "type": "string", "javaType": "org.apache.camel.ExchangePattern", "enum": [ "InOnly", "RobustInOnly", "InOut", "InOptionalOut", "OutOnly", "RobustOutOnly", "OutIn", "OutOptionalIn" ], "deprecated": "false", "secret": "false", "description": "Sets the exchange pattern when the consumer creates an exchange." },
    "synchronous": { "kind": "parameter", "group": "advanced", "label": "advanced", "type": "boolean", "javaType": "boolean", "deprecated": "false", "secret": "false", "defaultValue": "false", "description": "Sets whether synchronous processing should be strictly used or Camel is allowed to use asynchronous processing (if supported)." }
  }
}

