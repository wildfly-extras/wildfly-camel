{
 "component": {
    "kind": "component",
    "scheme": "direct-vm",
    "syntax": "direct-vm:name",
    "title": "Direct VM",
    "description": "The direct-vm component provides direct synchronous call to another endpoint from any CamelContext in the same JVM.",
    "label": "core,endpoint",
    "deprecated": "false",
    "async": "true",
    "javaType": "org.apache.camel.component.directvm.DirectVmComponent",
    "groupId": "org.apache.camel",
    "artifactId": "camel-core",
    "version": "2.18.0"
  },
  "componentProperties": {
    "block": { "kind": "property", "type": "boolean", "javaType": "boolean", "deprecated": "false", "secret": "false", "description": "If sending a message to a direct endpoint which has no active consumer then we can tell the producer to block and wait for the consumer to become active." },
    "timeout": { "kind": "property", "required": "false", "type": "integer", "javaType": "long", "deprecated": "false", "secret": "false", "defaultValue": "30000", "description": "The timeout value to use if block is enabled." },
    "headerFilterStrategy": { "kind": "property", "type": "object", "javaType": "org.apache.camel.spi.HeaderFilterStrategy", "deprecated": "false", "secret": "false", "description": "Sets a HeaderFilterStrategy that will only be applied on producer endpoints (on both directions: request and response). Default value: none." },
    "propagateProperties": { "kind": "property", "required": "false", "type": "boolean", "javaType": "boolean", "deprecated": "false", "secret": "false", "defaultValue": "true", "description": "Whether to propagate or not properties from the producer side to the consumer side and viceversa. Default value: true." }
  },
  "properties": {
    "name": { "kind": "path", "group": "common", "required": "true", "type": "string", "javaType": "java.lang.String", "deprecated": "false", "secret": "false", "description": "Name of direct-vm endpoint" },
    "bridgeErrorHandler": { "kind": "parameter", "group": "consumer", "label": "consumer", "type": "boolean", "javaType": "boolean", "optionalPrefix": "consumer.", "deprecated": "false", "secret": "false", "defaultValue": "false", "description": "Allows for bridging the consumer to the Camel routing Error Handler which mean any exceptions occurred while the consumer is trying to pickup incoming messages or the likes will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions that will be logged at WARN/ERROR level and ignored." },
    "exceptionHandler": { "kind": "parameter", "group": "consumer (advanced)", "label": "consumer,advanced", "type": "object", "javaType": "org.apache.camel.spi.ExceptionHandler", "optionalPrefix": "consumer.", "deprecated": "false", "secret": "false", "description": "To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this options is not in use. By default the consumer will deal with exceptions that will be logged at WARN/ERROR level and ignored." },
    "exchangePattern": { "kind": "parameter", "group": "consumer (advanced)", "label": "consumer,advanced", "type": "string", "javaType": "org.apache.camel.ExchangePattern", "enum": [ "InOnly", "RobustInOnly", "InOut", "InOptionalOut", "OutOnly", "RobustOutOnly", "OutIn", "OutOptionalIn" ], "deprecated": "false", "secret": "false", "description": "Sets the default exchange pattern when creating an exchange." },
    "block": { "kind": "parameter", "group": "producer", "label": "producer", "type": "boolean", "javaType": "boolean", "deprecated": "false", "secret": "false", "defaultValue": "false", "description": "If sending a message to a direct endpoint which has no active consumer then we can tell the producer to block and wait for the consumer to become active." },
    "failIfNoConsumers": { "kind": "parameter", "group": "producer", "label": "producer", "type": "boolean", "javaType": "boolean", "deprecated": "false", "secret": "false", "defaultValue": "false", "description": "Whether the producer should fail by throwing an exception when sending to a Direct-VM endpoint with no active consumers." },
    "timeout": { "kind": "parameter", "group": "producer", "label": "producer", "type": "integer", "javaType": "long", "deprecated": "false", "secret": "false", "defaultValue": "30000", "description": "The timeout value to use if block is enabled." },
    "headerFilterStrategy": { "kind": "parameter", "group": "producer (advanced)", "label": "producer,advanced", "type": "object", "javaType": "org.apache.camel.spi.HeaderFilterStrategy", "deprecated": "false", "secret": "false", "description": "Sets a HeaderFilterStrategy that will only be applied on producer endpoints (on both directions: request and response). Default value: none." },
    "propagateProperties": { "kind": "parameter", "group": "advanced", "label": "advanced", "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": "false", "secret": "false", "defaultValue": "false", "description": "Whether to propagate or not properties from the producer side to the consumer side and viceversa. Default value: true." },
    "synchronous": { "kind": "parameter", "group": "advanced", "label": "advanced", "type": "boolean", "javaType": "boolean", "deprecated": "false", "secret": "false", "defaultValue": "false", "description": "Sets whether synchronous processing should be strictly used or Camel is allowed to use asynchronous processing (if supported)." }
  }
}

