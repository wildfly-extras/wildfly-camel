{
 "component": {
    "kind": "component",
    "scheme": "cxf",
    "syntax": "cxf:beanId:address",
    "title": "CXF",
    "description": "The cxf component is used for SOAP WebServices using Apache CXF.",
    "label": "soap,webservice",
    "deprecated": "false",
    "async": "true",
    "javaType": "org.apache.camel.component.cxf.CxfComponent",
    "groupId": "org.apache.camel",
    "artifactId": "camel-cxf",
    "version": "2.18.0"
  },
  "componentProperties": {
    "allowStreaming": { "kind": "property", "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": "false", "secret": "false", "description": "This option controls whether the CXF component when running in PAYLOAD mode will DOM parse the incoming messages into DOM Elements or keep the payload as a javax.xml.transform.Source object that would allow streaming in some cases." },
    "headerFilterStrategy": { "kind": "property", "type": "object", "javaType": "org.apache.camel.spi.HeaderFilterStrategy", "deprecated": "false", "secret": "false", "description": "To use a custom HeaderFilterStrategy to filter header to and from Camel message." }
  },
  "properties": {
    "beanId": { "kind": "path", "group": "common", "type": "string", "javaType": "java.lang.String", "deprecated": "false", "secret": "false", "description": "To lookup an existing configured CxfEndpoint. Must used bean: as prefix." },
    "address": { "kind": "path", "group": "service", "label": "service", "type": "string", "javaType": "java.lang.String", "deprecated": "false", "secret": "false", "description": "The service publish address." },
    "dataFormat": { "kind": "parameter", "group": "common", "type": "string", "javaType": "org.apache.camel.component.cxf.DataFormat", "enum": [ "PAYLOAD", "RAW", "MESSAGE", "CXF_MESSAGE", "POJO" ], "deprecated": "false", "secret": "false", "defaultValue": "POJO", "description": "The data type messages supported by the CXF endpoint." },
    "wrappedStyle": { "kind": "parameter", "group": "common", "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": "false", "secret": "false", "description": "The WSDL style that describes how parameters are represented in the SOAP body. If the value is false CXF will chose the document-literal unwrapped style If the value is true CXF will chose the document-literal wrapped style" },
    "bridgeErrorHandler": { "kind": "parameter", "group": "consumer", "label": "consumer", "type": "boolean", "javaType": "boolean", "optionalPrefix": "consumer.", "deprecated": "false", "secret": "false", "defaultValue": "false", "description": "Allows for bridging the consumer to the Camel routing Error Handler which mean any exceptions occurred while the consumer is trying to pickup incoming messages or the likes will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions that will be logged at WARN/ERROR level and ignored." },
    "exceptionHandler": { "kind": "parameter", "group": "consumer (advanced)", "label": "consumer,advanced", "type": "object", "javaType": "org.apache.camel.spi.ExceptionHandler", "optionalPrefix": "consumer.", "deprecated": "false", "secret": "false", "description": "To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this options is not in use. By default the consumer will deal with exceptions that will be logged at WARN/ERROR level and ignored." },
    "exchangePattern": { "kind": "parameter", "group": "consumer (advanced)", "label": "consumer,advanced", "type": "string", "javaType": "org.apache.camel.ExchangePattern", "enum": [ "InOnly", "RobustInOnly", "InOut", "InOptionalOut", "OutOnly", "RobustOutOnly", "OutIn", "OutOptionalIn" ], "deprecated": "false", "secret": "false", "description": "Sets the exchange pattern when the consumer creates an exchange." },
    "defaultOperationName": { "kind": "parameter", "group": "producer", "label": "producer", "type": "string", "javaType": "java.lang.String", "deprecated": "false", "secret": "false", "description": "This option will set the default operationName that will be used by the CxfProducer which invokes the remote service." },
    "defaultOperationNamespace": { "kind": "parameter", "group": "producer", "label": "producer", "type": "string", "javaType": "java.lang.String", "deprecated": "false", "secret": "false", "description": "This option will set the default operationNamespace that will be used by the CxfProducer which invokes the remote service." },
    "hostnameVerifier": { "kind": "parameter", "group": "producer", "label": "producer", "type": "object", "javaType": "javax.net.ssl.HostnameVerifier", "deprecated": "false", "secret": "false", "description": "The hostname verifier to be used. Use the notation to reference a HostnameVerifier from the registry." },
    "sslContextParameters": { "kind": "parameter", "group": "producer", "label": "producer", "type": "object", "javaType": "org.apache.camel.util.jsse.SSLContextParameters", "deprecated": "false", "secret": "false", "description": "The Camel SSL setting reference. Use the notation to reference the SSL Context." },
    "wrapped": { "kind": "parameter", "group": "producer", "label": "producer", "type": "boolean", "javaType": "boolean", "deprecated": "false", "secret": "false", "defaultValue": "false", "description": "Which kind of operation that CXF endpoint producer will invoke" },
    "allowStreaming": { "kind": "parameter", "group": "advanced", "label": "advanced", "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": "false", "secret": "false", "description": "This option controls whether the CXF component when running in PAYLOAD mode will DOM parse the incoming messages into DOM Elements or keep the payload as a javax.xml.transform.Source object that would allow streaming in some cases." },
    "bus": { "kind": "parameter", "group": "advanced", "label": "advanced", "type": "object", "javaType": "org.apache.cxf.Bus", "deprecated": "false", "secret": "false", "description": "To use a custom configured CXF Bus." },
    "continuationTimeout": { "kind": "parameter", "group": "advanced", "label": "advanced", "type": "integer", "javaType": "long", "deprecated": "false", "secret": "false", "defaultValue": "30000", "description": "This option is used to set the CXF continuation timeout which could be used in CxfConsumer by default when the CXF server is using Jetty or Servlet transport." },
    "cxfBinding": { "kind": "parameter", "group": "advanced", "label": "advanced", "type": "object", "javaType": "org.apache.camel.component.cxf.CxfBinding", "deprecated": "false", "secret": "false", "description": "To use a custom CxfBinding to control the binding between Camel Message and CXF Message." },
    "cxfEndpointConfigurer": { "kind": "parameter", "group": "advanced", "label": "advanced", "type": "object", "javaType": "org.apache.camel.component.cxf.CxfEndpointConfigurer", "deprecated": "false", "secret": "false", "description": "This option could apply the implementation of org.apache.camel.component.cxf.CxfEndpointConfigurer which supports to configure the CXF endpoint in programmatic way. User can configure the CXF server and client by implementing configureServerClient method of CxfEndpointConfigurer." },
    "defaultBus": { "kind": "parameter", "group": "advanced", "label": "advanced", "type": "boolean", "javaType": "boolean", "deprecated": "false", "secret": "false", "defaultValue": "false", "description": "Will set the default bus when CXF endpoint create a bus by itself" },
    "headerFilterStrategy": { "kind": "parameter", "group": "advanced", "label": "advanced", "type": "object", "javaType": "org.apache.camel.spi.HeaderFilterStrategy", "deprecated": "false", "secret": "false", "description": "To use a custom HeaderFilterStrategy to filter header to and from Camel message." },
    "mergeProtocolHeaders": { "kind": "parameter", "group": "advanced", "label": "advanced", "type": "boolean", "javaType": "boolean", "deprecated": "false", "secret": "false", "defaultValue": "false", "description": "Whether to merge protocol headers. If enabled then propagating headers between Camel and CXF becomes more consistent and similar. For more details see CAMEL-6393." },
    "mtomEnabled": { "kind": "parameter", "group": "advanced", "label": "advanced", "type": "boolean", "javaType": "boolean", "deprecated": "false", "secret": "false", "defaultValue": "false", "description": "To enable MTOM (attachments). This requires to use POJO or PAYLOAD data format mode." },
    "properties": { "kind": "parameter", "group": "advanced", "label": "advanced", "type": "object", "javaType": "java.util.Map<java.lang.String,java.lang.Object>", "prefix": "properties.", "multiValue": "true", "deprecated": "false", "secret": "false", "description": "To set additional CXF options using the key/value pairs from the Map. For example to turn on stacktraces in SOAP faults properties.faultStackTraceEnabled=true" },
    "skipPayloadMessagePartCheck": { "kind": "parameter", "group": "advanced", "label": "advanced", "type": "boolean", "javaType": "boolean", "deprecated": "false", "secret": "false", "defaultValue": "false", "description": "Sets whether SOAP message validation should be disabled." },
    "synchronous": { "kind": "parameter", "group": "advanced", "label": "advanced", "type": "boolean", "javaType": "boolean", "deprecated": "false", "secret": "false", "defaultValue": "false", "description": "Sets whether synchronous processing should be strictly used or Camel is allowed to use asynchronous processing (if supported)." },
    "loggingFeatureEnabled": { "kind": "parameter", "group": "logging", "label": "logging", "type": "boolean", "javaType": "boolean", "deprecated": "false", "secret": "false", "defaultValue": "false", "description": "This option enables CXF Logging Feature which writes inbound and outbound SOAP messages to log." },
    "loggingSizeLimit": { "kind": "parameter", "group": "logging", "label": "logging", "type": "integer", "javaType": "int", "deprecated": "false", "secret": "false", "defaultValue": "49152", "description": "To limit the total size of number of bytes the logger will output when logging feature has been enabled and -1 for no limit." },
    "skipFaultLogging": { "kind": "parameter", "group": "logging", "label": "logging", "type": "boolean", "javaType": "boolean", "deprecated": "false", "secret": "false", "defaultValue": "false", "description": "This option controls whether the PhaseInterceptorChain skips logging the Fault that it catches." },
    "password": { "kind": "parameter", "group": "security", "label": "security", "type": "string", "javaType": "java.lang.String", "deprecated": "false", "secret": "true", "description": "This option is used to set the basic authentication information of password for the CXF client." },
    "username": { "kind": "parameter", "group": "security", "label": "security", "type": "string", "javaType": "java.lang.String", "deprecated": "false", "secret": "true", "description": "This option is used to set the basic authentication information of username for the CXF client." },
    "bindingId": { "kind": "parameter", "group": "service", "label": "service", "type": "string", "javaType": "java.lang.String", "deprecated": "false", "secret": "false", "description": "The bindingId for the service model to use." },
    "portName": { "kind": "parameter", "group": "service", "label": "service", "type": "string", "javaType": "java.lang.String", "deprecated": "false", "secret": "false", "description": "The endpoint name this service is implementing it maps to the wsdl:portname. In the format of ns:PORT_NAME where ns is a namespace prefix valid at this scope." },
    "publishedEndpointUrl": { "kind": "parameter", "group": "service", "label": "service", "type": "string", "javaType": "java.lang.String", "deprecated": "false", "secret": "false", "description": "This option can override the endpointUrl that published from the WSDL which can be accessed with service address url plus wsd" },
    "serviceClass": { "kind": "parameter", "group": "service", "label": "service", "type": "string", "javaType": "java.lang.Class<?>", "deprecated": "false", "secret": "false", "description": "The class name of the SEI (Service Endpoint Interface) class which could have JSR181 annotation or not." },
    "serviceName": { "kind": "parameter", "group": "service", "label": "service", "type": "string", "javaType": "java.lang.String", "deprecated": "false", "secret": "false", "description": "The service name this service is implementing it maps to the wsdl:servicename." },
    "wsdlURL": { "kind": "parameter", "group": "service", "label": "service", "type": "string", "javaType": "java.lang.String", "deprecated": "false", "secret": "false", "description": "The location of the WSDL. Can be on the classpath file system or be hosted remotely." }
  }
}

