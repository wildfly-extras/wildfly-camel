{
 "component": {
    "kind": "component",
    "scheme": "undertow",
    "syntax": "undertow:httpURI",
    "title": "Undertow",
    "description": "The undertow component provides HTTP-based endpoints for consuming and producing HTTP requests.",
    "label": "http",
    "deprecated": "false",
    "async": "true",
    "lenientProperties": "true",
    "javaType": "org.apache.camel.component.undertow.UndertowComponent",
    "groupId": "org.apache.camel",
    "artifactId": "camel-undertow",
    "version": "2.18.0"
  },
  "componentProperties": {
    "undertowHttpBinding": { "kind": "property", "type": "object", "javaType": "org.apache.camel.component.undertow.UndertowHttpBinding", "deprecated": "false", "secret": "false", "description": "To use a custom HttpBinding to control the mapping between Camel message and HttpClient." },
    "sslContextParameters": { "kind": "property", "type": "object", "javaType": "org.apache.camel.util.jsse.SSLContextParameters", "deprecated": "false", "secret": "false", "description": "To configure security using SSLContextParameters" }
  },
  "properties": {
    "httpURI": { "kind": "path", "group": "common", "required": "true", "type": "string", "javaType": "java.net.URI", "deprecated": "false", "secret": "false", "description": "The url of the HTTP endpoint to use." },
    "bridgeErrorHandler": { "kind": "parameter", "group": "consumer", "label": "consumer", "type": "boolean", "javaType": "boolean", "optionalPrefix": "consumer.", "deprecated": "false", "secret": "false", "defaultValue": "false", "description": "Allows for bridging the consumer to the Camel routing Error Handler which mean any exceptions occurred while the consumer is trying to pickup incoming messages or the likes will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions that will be logged at WARN/ERROR level and ignored." },
    "httpMethodRestrict": { "kind": "parameter", "group": "consumer", "label": "consumer", "type": "string", "javaType": "java.lang.String", "deprecated": "false", "secret": "false", "description": "Used to only allow consuming if the HttpMethod matches such as GET/POST/PUT etc. Multiple methods can be specified separated by comma." },
    "matchOnUriPrefix": { "kind": "parameter", "group": "consumer", "label": "consumer", "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": "false", "secret": "false", "defaultValue": "true", "description": "Whether or not the consumer should try to find a target consumer by matching the URI prefix if no exact match is found." },
    "optionsEnabled": { "kind": "parameter", "group": "consumer", "label": "consumer", "type": "boolean", "javaType": "boolean", "deprecated": "false", "secret": "false", "defaultValue": "false", "description": "Specifies whether to enable HTTP OPTIONS for this Servlet consumer. By default OPTIONS is turned off." },
    "exceptionHandler": { "kind": "parameter", "group": "consumer (advanced)", "label": "consumer,advanced", "type": "object", "javaType": "org.apache.camel.spi.ExceptionHandler", "optionalPrefix": "consumer.", "deprecated": "false", "secret": "false", "description": "To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this options is not in use. By default the consumer will deal with exceptions that will be logged at WARN/ERROR level and ignored." },
    "exchangePattern": { "kind": "parameter", "group": "consumer (advanced)", "label": "consumer,advanced", "type": "string", "javaType": "org.apache.camel.ExchangePattern", "enum": [ "InOnly", "RobustInOnly", "InOut", "InOptionalOut", "OutOnly", "RobustOutOnly", "OutIn", "OutOptionalIn" ], "deprecated": "false", "secret": "false", "description": "Sets the exchange pattern when the consumer creates an exchange." },
    "keepAlive": { "kind": "parameter", "group": "producer", "label": "producer", "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": "false", "secret": "false", "defaultValue": "true", "description": "Setting to ensure socket is not closed due to inactivity" },
    "options": { "kind": "parameter", "group": "producer", "label": "producer", "type": "object", "javaType": "java.util.Map<java.lang.String,java.lang.Object>", "prefix": "option.", "multiValue": "true", "deprecated": "false", "secret": "false", "description": "Sets additional channel options. The options that can be used are defined in org.xnio.Options. To configure from endpoint uri then prefix each option with option. such as option.close-abort=true&option.send-buffer=8192" },
    "reuseAddresses": { "kind": "parameter", "group": "producer", "label": "producer", "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": "false", "secret": "false", "defaultValue": "true", "description": "Setting to facilitate socket multiplexing" },
    "tcpNoDelay": { "kind": "parameter", "group": "producer", "label": "producer", "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": "false", "secret": "false", "defaultValue": "true", "description": "Setting to improve TCP protocol performance" },
    "throwExceptionOnFailure": { "kind": "parameter", "group": "producer", "label": "producer", "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": "false", "secret": "false", "defaultValue": "true", "description": "If the option is true HttpProducer will ignore the Exchange.HTTP_URI header and use the endpoint's URI for request. You may also set the option throwExceptionOnFailure to be false to let the producer send all the fault response back." },
    "transferException": { "kind": "parameter", "group": "producer", "label": "producer", "type": "boolean", "javaType": "java.lang.Boolean", "deprecated": "false", "secret": "false", "defaultValue": "false", "description": "Option to disable throwing the HttpOperationFailedException in case of failed responses from the remote server. This allows you to get all responses regardless of the HTTP status code." },
    "headerFilterStrategy": { "kind": "parameter", "group": "advanced", "label": "advanced", "type": "object", "javaType": "org.apache.camel.spi.HeaderFilterStrategy", "deprecated": "false", "secret": "false", "description": "To use a custom HeaderFilterStrategy to filter header to and from Camel message." },
    "synchronous": { "kind": "parameter", "group": "advanced", "label": "advanced", "type": "boolean", "javaType": "boolean", "deprecated": "false", "secret": "false", "defaultValue": "false", "description": "Sets whether synchronous processing should be strictly used or Camel is allowed to use asynchronous processing (if supported)." },
    "undertowHttpBinding": { "kind": "parameter", "group": "advanced", "label": "advanced", "type": "object", "javaType": "org.apache.camel.component.undertow.UndertowHttpBinding", "deprecated": "false", "secret": "false", "description": "To use a custom UndertowHttpBinding to control the mapping between Camel message and undertow." },
    "sslContextParameters": { "kind": "parameter", "group": "security", "label": "security", "type": "object", "javaType": "org.apache.camel.util.jsse.SSLContextParameters", "deprecated": "false", "secret": "false", "description": "To configure security using SSLContextParameters" }
  }
}

