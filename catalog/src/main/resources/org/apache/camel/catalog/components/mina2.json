{
 "component": {
    "kind": "component",
    "scheme": "mina2",
    "syntax": "mina2:protocol:host:port",
    "title": "Mina2",
    "description": "Socket level networking using TCP or UDP with the Apache Mina 2.x library.",
    "label": "networking,tcp,udp",
    "deprecated": "false",
    "async": "false",
    "javaType": "org.apache.camel.component.mina2.Mina2Component",
    "groupId": "org.apache.camel",
    "artifactId": "camel-mina2",
    "version": "2.18.0"
  },
  "componentProperties": {
    "configuration": { "kind": "property", "type": "object", "javaType": "org.apache.camel.component.mina2.Mina2Configuration", "deprecated": "false", "secret": "false", "description": "To use the shared mina configuration." }
  },
  "properties": {
    "protocol": { "kind": "path", "group": "common", "required": "true", "type": "string", "javaType": "java.lang.String", "deprecated": "false", "secret": "false", "description": "Protocol to use" },
    "host": { "kind": "path", "group": "common", "required": "true", "type": "string", "javaType": "java.lang.String", "deprecated": "false", "secret": "false", "description": "Hostname to use. Use localhost or 0.0.0.0 for local server as consumer. For producer use the hostname or ip address of the remote server." },
    "port": { "kind": "path", "group": "common", "required": "true", "type": "integer", "javaType": "int", "deprecated": "false", "secret": "false", "description": "Port number" },
    "disconnect": { "kind": "parameter", "group": "common", "type": "boolean", "javaType": "boolean", "deprecated": "false", "secret": "false", "defaultValue": "false", "description": "Whether or not to disconnect(close) from Mina session right after use. Can be used for both consumer and producer." },
    "minaLogger": { "kind": "parameter", "group": "common", "type": "boolean", "javaType": "boolean", "deprecated": "false", "secret": "false", "defaultValue": "false", "description": "You can enable the Apache MINA logging filter. Apache MINA uses slf4j logging at INFO level to log all input and output." },
    "sync": { "kind": "parameter", "group": "common", "type": "boolean", "javaType": "boolean", "deprecated": "false", "secret": "false", "defaultValue": "true", "description": "Setting to set endpoint as one-way or request-response." },
    "timeout": { "kind": "parameter", "group": "common", "type": "integer", "javaType": "long", "deprecated": "false", "secret": "false", "defaultValue": "30000", "description": "You can configure the timeout that specifies how long to wait for a response from a remote server. The timeout unit is in milliseconds so 60000 is 60 seconds." },
    "bridgeErrorHandler": { "kind": "parameter", "group": "consumer", "label": "consumer", "type": "boolean", "javaType": "boolean", "optionalPrefix": "consumer.", "deprecated": "false", "secret": "false", "defaultValue": "false", "description": "Allows for bridging the consumer to the Camel routing Error Handler which mean any exceptions occurred while the consumer is trying to pickup incoming messages or the likes will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions that will be logged at WARN/ERROR level and ignored." },
    "clientMode": { "kind": "parameter", "group": "consumer", "label": "consumer", "type": "boolean", "javaType": "boolean", "deprecated": "false", "secret": "false", "defaultValue": "false", "description": "If the clientMode is true mina consumer will connect the address as a TCP client." },
    "disconnectOnNoReply": { "kind": "parameter", "group": "consumer (advanced)", "label": "consumer,advanced", "type": "boolean", "javaType": "boolean", "deprecated": "false", "secret": "false", "defaultValue": "true", "description": "If sync is enabled then this option dictates MinaConsumer if it should disconnect where there is no reply to send back." },
    "exceptionHandler": { "kind": "parameter", "group": "consumer (advanced)", "label": "consumer,advanced", "type": "object", "javaType": "org.apache.camel.spi.ExceptionHandler", "optionalPrefix": "consumer.", "deprecated": "false", "secret": "false", "description": "To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this options is not in use. By default the consumer will deal with exceptions that will be logged at WARN/ERROR level and ignored." },
    "exchangePattern": { "kind": "parameter", "group": "consumer (advanced)", "label": "consumer,advanced", "type": "string", "javaType": "org.apache.camel.ExchangePattern", "enum": [ "InOnly", "RobustInOnly", "InOut", "InOptionalOut", "OutOnly", "RobustOutOnly", "OutIn", "OutOptionalIn" ], "deprecated": "false", "secret": "false", "description": "Sets the exchange pattern when the consumer creates an exchange." },
    "noReplyLogLevel": { "kind": "parameter", "group": "consumer (advanced)", "label": "consumer,advanced", "type": "string", "javaType": "org.apache.camel.LoggingLevel", "enum": [ "TRACE", "DEBUG", "INFO", "WARN", "ERROR", "OFF" ], "deprecated": "false", "secret": "false", "defaultValue": "WARN", "description": "If sync is enabled this option dictates MinaConsumer which logging level to use when logging a there is no reply to send back." },
    "cachedAddress": { "kind": "parameter", "group": "producer (advanced)", "label": "producer,advanced", "type": "boolean", "javaType": "boolean", "deprecated": "false", "secret": "false", "defaultValue": "true", "description": "Whether to create the InetAddress once and reuse. Setting this to false allows to pickup DNS changes in the network." },
    "lazySessionCreation": { "kind": "parameter", "group": "producer (advanced)", "label": "producer,advanced", "type": "boolean", "javaType": "boolean", "deprecated": "false", "secret": "false", "defaultValue": "true", "description": "Sessions can be lazily created to avoid exceptions if the remote server is not up and running when the Camel producer is started." },
    "maximumPoolSize": { "kind": "parameter", "group": "advanced", "label": "advanced", "type": "integer", "javaType": "int", "deprecated": "false", "secret": "false", "defaultValue": "16", "description": "Number of worker threads in the worker pool for TCP and UDP" },
    "orderedThreadPoolExecutor": { "kind": "parameter", "group": "advanced", "label": "advanced", "type": "boolean", "javaType": "boolean", "deprecated": "false", "secret": "false", "defaultValue": "true", "description": "Whether to use ordered thread pool to ensure events are processed orderly on the same channel." },
    "synchronous": { "kind": "parameter", "group": "advanced", "label": "advanced", "type": "boolean", "javaType": "boolean", "deprecated": "false", "secret": "false", "defaultValue": "false", "description": "Sets whether synchronous processing should be strictly used or Camel is allowed to use asynchronous processing (if supported)." },
    "transferExchange": { "kind": "parameter", "group": "advanced", "label": "advanced", "type": "boolean", "javaType": "boolean", "deprecated": "false", "secret": "false", "defaultValue": "false", "description": "Only used for TCP. You can transfer the exchange over the wire instead of just the body. The following fields are transferred: In body Out body fault body In headers Out headers fault headers exchange properties exchange exception. This requires that the objects are serializable. Camel will exclude any non-serializable objects and log it at WARN level." },
    "allowDefaultCodec": { "kind": "parameter", "group": "codec", "label": "codec", "type": "boolean", "javaType": "boolean", "deprecated": "false", "secret": "false", "defaultValue": "true", "description": "The mina component installs a default codec if both codec is null and textline is false. Setting allowDefaultCodec to false prevents the mina component from installing a default codec as the first element in the filter chain. This is useful in scenarios where another filter must be the first in the filter chain like the SSL filter." },
    "codec": { "kind": "parameter", "group": "codec", "label": "codec", "type": "object", "javaType": "org.apache.mina.filter.codec.ProtocolCodecFactory", "deprecated": "false", "secret": "false", "description": "To use a custom minda codec implementation." },
    "decoderMaxLineLength": { "kind": "parameter", "group": "codec", "label": "codec", "type": "integer", "javaType": "int", "deprecated": "false", "secret": "false", "defaultValue": "1024", "description": "To set the textline protocol decoder max line length. By default the default value of Mina itself is used which are 1024." },
    "encoderMaxLineLength": { "kind": "parameter", "group": "codec", "label": "codec", "type": "integer", "javaType": "int", "deprecated": "false", "secret": "false", "defaultValue": "-1", "description": "To set the textline protocol encoder max line length. By default the default value of Mina itself is used which are Integer.MAX_VALUE." },
    "encoding": { "kind": "parameter", "group": "codec", "label": "codec", "type": "string", "javaType": "java.lang.String", "deprecated": "false", "secret": "false", "description": "You can configure the encoding (a charset name) to use for the TCP textline codec and the UDP protocol. If not provided Camel will use the JVM default Charset" },
    "filters": { "kind": "parameter", "group": "codec", "label": "codec", "type": "array", "javaType": "java.util.List<org.apache.mina.core.filterchain.IoFilter>", "deprecated": "false", "secret": "false", "description": "You can set a list of Mina IoFilters to use." },
    "textline": { "kind": "parameter", "group": "codec", "label": "codec", "type": "boolean", "javaType": "boolean", "deprecated": "false", "secret": "false", "defaultValue": "false", "description": "Only used for TCP. If no codec is specified you can use this flag to indicate a text line based codec; if not specified or the value is false then Object Serialization is assumed over TCP." },
    "textlineDelimiter": { "kind": "parameter", "group": "codec", "label": "codec", "type": "string", "javaType": "org.apache.camel.component.mina2.Mina2TextLineDelimiter", "enum": [ "DEFAULT", "AUTO", "UNIX", "WINDOWS", "MAC" ], "deprecated": "false", "secret": "false", "description": "Only used for TCP and if textline=true. Sets the text line delimiter to use. If none provided Camel will use DEFAULT. This delimiter is used to mark the end of text." },
    "autoStartTls": { "kind": "parameter", "group": "security", "label": "security", "type": "boolean", "javaType": "boolean", "deprecated": "false", "secret": "false", "defaultValue": "true", "description": "Whether to auto start SSL handshake." },
    "sslContextParameters": { "kind": "parameter", "group": "security", "label": "security", "type": "object", "javaType": "org.apache.camel.util.jsse.SSLContextParameters", "deprecated": "false", "secret": "false", "description": "To configure SSL security." }
  }
}

