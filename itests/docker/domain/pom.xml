<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  Wildfly Camel Testsuite
  %%
  Copyright (C) 2013 - 2014 RedHat
  %%
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
       http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  #L%
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.wildfly.camel</groupId>
        <artifactId>wildfly-camel-itests-docker</artifactId>
        <version>2.1.0-SNAPSHOT</version>
    </parent>

    <name>Wildfly Camel :: Testsuite :: Docker :: Domain</name>

    <artifactId>wildfly-camel-itests-docker-domain</artifactId>
    <packaging>war</packaging>

    <!-- Properties -->
    <properties>
        <docker.image.name>wildflyext/example-domain</docker.image.name>
        <docker.image.version>latest</docker.image.version>
    </properties>
    
    <!-- Dependencies -->
    <dependencies>
    
        <!-- Provided -->
        <dependency>
            <groupId>org.jboss.spec.javax.servlet</groupId>
            <artifactId>jboss-servlet-api_3.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        
        <!-- Test Scope -->
        <dependency>
            <groupId>org.wildfly.camel</groupId>
            <artifactId>wildfly-camel-itests-common</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly</groupId>
            <artifactId>wildfly-arquillian-container-remote</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    
    <!-- Build -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <id>example-domain-master</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <appendAssemblyId>false</appendAssemblyId>
                            <finalName>docker-master</finalName>
                            <descriptors>
                                <descriptor>scripts/assembly-master.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                    <execution>
                        <id>example-domain-slave</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <appendAssemblyId>false</appendAssemblyId>
                            <finalName>docker-slave</finalName>
                            <descriptors>
                                <descriptor>scripts/assembly-slave.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <exec executable="docker">
                                    <arg value="rmi"/>
                                    <arg value="--force=true"/>
                                    <arg value="${docker.image.name}-master:${docker.image.version}"/>
                                </exec>
                                <exec executable="docker">
                                    <arg value="rmi"/>
                                    <arg value="--force=true"/>
                                    <arg value="${docker.image.name}-slave:${docker.image.version}"/>
                                </exec>
                                <exec executable="docker" error="target/build-master.err">
                                    <arg value="build"/>
                                    <arg value="--force-rm=true"/>
                                    <arg value="--rm=true"/>
                                    <arg value="-t"/>
                                    <arg value="${docker.image.name}-master:${docker.image.version}"/>
                                    <arg value="target/docker-master"/>
                                </exec>
                                <exec executable="docker" error="target/build-slave.err">
                                    <arg value="build"/>
                                    <arg value="--force-rm=true"/>
                                    <arg value="--rm=true"/>
                                    <arg value="-t"/>
                                    <arg value="${docker.image.name}-slave:${docker.image.version}"/>
                                    <arg value="target/docker-slave"/>
                                </exec>
                                <echo>=========================================================================</echo>
                                <echo>docker run --rm -ti -p 9990:9990 --name=controller ${docker.image.name}-master</echo>
                                <echo>docker run --rm -ti -p 8181:8080 --link controller:ctrl ${docker.image.name}-slave</echo>
                                <echo>=========================================================================</echo>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jolokia</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>start-docker-image</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                        <configuration>
                            <images>
                                <image>
                                    <name>${docker.image.name}-master</name>
                                    <alias>controller</alias>
                                    <run>
                                        <ports>
                                            <port>9990:9990</port>
                                        </ports>
                                        <log>
                                            <enabled>true</enabled>
                                        </log>
                                    </run>
                                </image>
                                <image>
                                    <name>${docker.image.name}-slave</name>
                                    <alias>slave</alias>
                                    <run>
                                        <ports>
                                            <port>8181:8080</port>
                                        </ports>
                                        <links>
                                            <link>controller:ctrl</link>
                                        </links>
                                        <log>
                                            <enabled>true</enabled>
                                        </log>
                                        <wait>
                                            <url>http://${env.DOCKER_IP}:8181</url>
                                            <time>10000</time>
                                        </wait>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop-docker-image</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                        <configuration>
                            <images>
                                <image>
                                    <alias>slave</alias>
                                </image>
                                <image>
                                    <alias>controller</alias>
                                </image>
                            </images>
                        </configuration>
                    </execution>
                </executions>
             </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
                <executions>
                    <execution>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <skip>false</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    
</project>
