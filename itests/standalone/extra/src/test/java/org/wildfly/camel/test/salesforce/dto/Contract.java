/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin.
 */
package org.wildfly.camel.test.salesforce.dto;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;

import com.thoughtworks.xstream.annotations.XStreamAlias;
import com.thoughtworks.xstream.annotations.XStreamConverter;

import org.apache.camel.component.salesforce.api.PicklistEnumConverter;
import org.apache.camel.component.salesforce.api.dto.AbstractDescribedSObjectBase;
import org.apache.camel.component.salesforce.api.dto.Attributes;
import org.apache.camel.component.salesforce.api.dto.ChildRelationShip;
import org.apache.camel.component.salesforce.api.dto.InfoUrls;
import org.apache.camel.component.salesforce.api.dto.NamedLayoutInfo;
import org.apache.camel.component.salesforce.api.dto.RecordTypeInfo;
import org.apache.camel.component.salesforce.api.dto.SObjectDescription;
import org.apache.camel.component.salesforce.api.dto.SObjectDescriptionUrls;
import org.apache.camel.component.salesforce.api.dto.SObjectField;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Salesforce DTO for SObject Contract
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
@XStreamAlias("Contract")
public class Contract extends AbstractDescribedSObjectBase {

    public Contract() {
        getAttributes().setType("Contract");
    }

    private static final SObjectDescription DESCRIPTION = createSObjectDescription();

    private String AccountId;

    @JsonProperty("AccountId")
    public String getAccountId() {
        return this.AccountId;
    }

    @JsonProperty("AccountId")
    public void setAccountId(String AccountId) {
        this.AccountId = AccountId;
    }

    private String Pricebook2Id;

    @JsonProperty("Pricebook2Id")
    public String getPricebook2Id() {
        return this.Pricebook2Id;
    }

    @JsonProperty("Pricebook2Id")
    public void setPricebook2Id(String Pricebook2Id) {
        this.Pricebook2Id = Pricebook2Id;
    }

    @XStreamConverter(PicklistEnumConverter.class)
    private Contract_OwnerExpirationNoticeEnum OwnerExpirationNotice;

    @JsonProperty("OwnerExpirationNotice")
    public Contract_OwnerExpirationNoticeEnum getOwnerExpirationNotice() {
        return this.OwnerExpirationNotice;
    }

    @JsonProperty("OwnerExpirationNotice")
    public void setOwnerExpirationNotice(Contract_OwnerExpirationNoticeEnum OwnerExpirationNotice) {
        this.OwnerExpirationNotice = OwnerExpirationNotice;
    }

    private java.time.LocalDate StartDate;

    @JsonProperty("StartDate")
    public java.time.LocalDate getStartDate() {
        return this.StartDate;
    }

    @JsonProperty("StartDate")
    public void setStartDate(java.time.LocalDate StartDate) {
        this.StartDate = StartDate;
    }

    private java.time.LocalDate EndDate;

    @JsonProperty("EndDate")
    public java.time.LocalDate getEndDate() {
        return this.EndDate;
    }

    @JsonProperty("EndDate")
    public void setEndDate(java.time.LocalDate EndDate) {
        this.EndDate = EndDate;
    }

    private String BillingStreet;

    @JsonProperty("BillingStreet")
    public String getBillingStreet() {
        return this.BillingStreet;
    }

    @JsonProperty("BillingStreet")
    public void setBillingStreet(String BillingStreet) {
        this.BillingStreet = BillingStreet;
    }

    private String BillingCity;

    @JsonProperty("BillingCity")
    public String getBillingCity() {
        return this.BillingCity;
    }

    @JsonProperty("BillingCity")
    public void setBillingCity(String BillingCity) {
        this.BillingCity = BillingCity;
    }

    private String BillingState;

    @JsonProperty("BillingState")
    public String getBillingState() {
        return this.BillingState;
    }

    @JsonProperty("BillingState")
    public void setBillingState(String BillingState) {
        this.BillingState = BillingState;
    }

    private String BillingPostalCode;

    @JsonProperty("BillingPostalCode")
    public String getBillingPostalCode() {
        return this.BillingPostalCode;
    }

    @JsonProperty("BillingPostalCode")
    public void setBillingPostalCode(String BillingPostalCode) {
        this.BillingPostalCode = BillingPostalCode;
    }

    private String BillingCountry;

    @JsonProperty("BillingCountry")
    public String getBillingCountry() {
        return this.BillingCountry;
    }

    @JsonProperty("BillingCountry")
    public void setBillingCountry(String BillingCountry) {
        this.BillingCountry = BillingCountry;
    }

    private Double BillingLatitude;

    @JsonProperty("BillingLatitude")
    public Double getBillingLatitude() {
        return this.BillingLatitude;
    }

    @JsonProperty("BillingLatitude")
    public void setBillingLatitude(Double BillingLatitude) {
        this.BillingLatitude = BillingLatitude;
    }

    private Double BillingLongitude;

    @JsonProperty("BillingLongitude")
    public Double getBillingLongitude() {
        return this.BillingLongitude;
    }

    @JsonProperty("BillingLongitude")
    public void setBillingLongitude(Double BillingLongitude) {
        this.BillingLongitude = BillingLongitude;
    }

    private org.apache.camel.component.salesforce.api.dto.Address BillingAddress;

    @JsonProperty("BillingAddress")
    public org.apache.camel.component.salesforce.api.dto.Address getBillingAddress() {
        return this.BillingAddress;
    }

    @JsonProperty("BillingAddress")
    public void setBillingAddress(org.apache.camel.component.salesforce.api.dto.Address BillingAddress) {
        this.BillingAddress = BillingAddress;
    }

    private Integer ContractTerm;

    @JsonProperty("ContractTerm")
    public Integer getContractTerm() {
        return this.ContractTerm;
    }

    @JsonProperty("ContractTerm")
    public void setContractTerm(Integer ContractTerm) {
        this.ContractTerm = ContractTerm;
    }

    @XStreamConverter(PicklistEnumConverter.class)
    private Contract_StatusEnum Status;

    @JsonProperty("Status")
    public Contract_StatusEnum getStatus() {
        return this.Status;
    }

    @JsonProperty("Status")
    public void setStatus(Contract_StatusEnum Status) {
        this.Status = Status;
    }

    private String CompanySignedId;

    @JsonProperty("CompanySignedId")
    public String getCompanySignedId() {
        return this.CompanySignedId;
    }

    @JsonProperty("CompanySignedId")
    public void setCompanySignedId(String CompanySignedId) {
        this.CompanySignedId = CompanySignedId;
    }

    private java.time.LocalDate CompanySignedDate;

    @JsonProperty("CompanySignedDate")
    public java.time.LocalDate getCompanySignedDate() {
        return this.CompanySignedDate;
    }

    @JsonProperty("CompanySignedDate")
    public void setCompanySignedDate(java.time.LocalDate CompanySignedDate) {
        this.CompanySignedDate = CompanySignedDate;
    }

    private String CustomerSignedId;

    @JsonProperty("CustomerSignedId")
    public String getCustomerSignedId() {
        return this.CustomerSignedId;
    }

    @JsonProperty("CustomerSignedId")
    public void setCustomerSignedId(String CustomerSignedId) {
        this.CustomerSignedId = CustomerSignedId;
    }

    private String CustomerSignedTitle;

    @JsonProperty("CustomerSignedTitle")
    public String getCustomerSignedTitle() {
        return this.CustomerSignedTitle;
    }

    @JsonProperty("CustomerSignedTitle")
    public void setCustomerSignedTitle(String CustomerSignedTitle) {
        this.CustomerSignedTitle = CustomerSignedTitle;
    }

    private java.time.LocalDate CustomerSignedDate;

    @JsonProperty("CustomerSignedDate")
    public java.time.LocalDate getCustomerSignedDate() {
        return this.CustomerSignedDate;
    }

    @JsonProperty("CustomerSignedDate")
    public void setCustomerSignedDate(java.time.LocalDate CustomerSignedDate) {
        this.CustomerSignedDate = CustomerSignedDate;
    }

    private String SpecialTerms;

    @JsonProperty("SpecialTerms")
    public String getSpecialTerms() {
        return this.SpecialTerms;
    }

    @JsonProperty("SpecialTerms")
    public void setSpecialTerms(String SpecialTerms) {
        this.SpecialTerms = SpecialTerms;
    }

    private String ActivatedById;

    @JsonProperty("ActivatedById")
    public String getActivatedById() {
        return this.ActivatedById;
    }

    @JsonProperty("ActivatedById")
    public void setActivatedById(String ActivatedById) {
        this.ActivatedById = ActivatedById;
    }

    private java.time.ZonedDateTime ActivatedDate;

    @JsonProperty("ActivatedDate")
    public java.time.ZonedDateTime getActivatedDate() {
        return this.ActivatedDate;
    }

    @JsonProperty("ActivatedDate")
    public void setActivatedDate(java.time.ZonedDateTime ActivatedDate) {
        this.ActivatedDate = ActivatedDate;
    }

    @XStreamConverter(PicklistEnumConverter.class)
    private Contract_StatusCodeEnum StatusCode;

    @JsonProperty("StatusCode")
    public Contract_StatusCodeEnum getStatusCode() {
        return this.StatusCode;
    }

    @JsonProperty("StatusCode")
    public void setStatusCode(Contract_StatusCodeEnum StatusCode) {
        this.StatusCode = StatusCode;
    }

    private String Description;

    @JsonProperty("Description")
    public String getDescription() {
        return this.Description;
    }

    @JsonProperty("Description")
    public void setDescription(String Description) {
        this.Description = Description;
    }

    private String ContractNumber;

    @JsonProperty("ContractNumber")
    public String getContractNumber() {
        return this.ContractNumber;
    }

    @JsonProperty("ContractNumber")
    public void setContractNumber(String ContractNumber) {
        this.ContractNumber = ContractNumber;
    }

    private java.time.ZonedDateTime LastApprovedDate;

    @JsonProperty("LastApprovedDate")
    public java.time.ZonedDateTime getLastApprovedDate() {
        return this.LastApprovedDate;
    }

    @JsonProperty("LastApprovedDate")
    public void setLastApprovedDate(java.time.ZonedDateTime LastApprovedDate) {
        this.LastApprovedDate = LastApprovedDate;
    }

     private QueryRecordsOrder Orders;

    @JsonProperty("Orders")
    public QueryRecordsOrder getOrders() {
        return Orders;
    }

    @JsonProperty("Orders")
    public void setOrders(QueryRecordsOrder Orders) {
        this.Orders = Orders;
    }

    @Override
    public final SObjectDescription description() {
        return DESCRIPTION;
    }

    private static SObjectDescription createSObjectDescription() {
        final SObjectDescription description = new SObjectDescription();



        final List<SObjectField> fields1 = new ArrayList<>();
        description.setFields(fields1);

        final SObjectField sObjectField1 = createField("Id", "Contract ID", "id", "tns:ID", 18, false, false, false, false, false, false, true);
        fields1.add(sObjectField1);
        final SObjectField sObjectField2 = createField("AccountId", "Account ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField2);
        final SObjectField sObjectField3 = createField("Pricebook2Id", "Price Book ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField3);
        final SObjectField sObjectField4 = createField("OwnerExpirationNotice", "Owner Expiration Notice", "picklist", "xsd:string", 40, false, true, false, false, false, false, false);
        fields1.add(sObjectField4);
        final SObjectField sObjectField5 = createField("StartDate", "Contract Start Date", "date", "xsd:date", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField5);
        final SObjectField sObjectField6 = createField("EndDate", "Contract End Date", "date", "xsd:date", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField6);
        final SObjectField sObjectField7 = createField("BillingStreet", "Billing Street", "textarea", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField7);
        final SObjectField sObjectField8 = createField("BillingCity", "Billing City", "string", "xsd:string", 40, false, true, false, false, false, false, false);
        fields1.add(sObjectField8);
        final SObjectField sObjectField9 = createField("BillingState", "Billing State/Province", "string", "xsd:string", 80, false, true, false, false, false, false, false);
        fields1.add(sObjectField9);
        final SObjectField sObjectField10 = createField("BillingPostalCode", "Billing Zip/Postal Code", "string", "xsd:string", 20, false, true, false, false, false, false, false);
        fields1.add(sObjectField10);
        final SObjectField sObjectField11 = createField("BillingCountry", "Billing Country", "string", "xsd:string", 80, false, true, false, false, false, false, false);
        fields1.add(sObjectField11);
        final SObjectField sObjectField12 = createField("BillingLatitude", "Billing Latitude", "double", "xsd:double", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField12);
        final SObjectField sObjectField13 = createField("BillingLongitude", "Billing Longitude", "double", "xsd:double", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField13);
        final SObjectField sObjectField14 = createField("BillingAddress", "Billing Address", "address", "urn:address", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField14);
        final SObjectField sObjectField15 = createField("ContractTerm", "Contract Term", "int", "xsd:int", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField15);
        final SObjectField sObjectField16 = createField("OwnerId", "Owner ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField16);
        final SObjectField sObjectField17 = createField("Status", "Status", "picklist", "xsd:string", 40, false, false, false, false, false, false, false);
        fields1.add(sObjectField17);
        final SObjectField sObjectField18 = createField("CompanySignedId", "Company Signed By ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField18);
        final SObjectField sObjectField19 = createField("CompanySignedDate", "Company Signed Date", "date", "xsd:date", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField19);
        final SObjectField sObjectField20 = createField("CustomerSignedId", "Customer Signed By ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField20);
        final SObjectField sObjectField21 = createField("CustomerSignedTitle", "Customer Signed Title", "string", "xsd:string", 40, false, true, false, false, false, false, false);
        fields1.add(sObjectField21);
        final SObjectField sObjectField22 = createField("CustomerSignedDate", "Customer Signed Date", "date", "xsd:date", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField22);
        final SObjectField sObjectField23 = createField("SpecialTerms", "Special Terms", "textarea", "xsd:string", 4000, false, true, false, false, false, false, false);
        fields1.add(sObjectField23);
        final SObjectField sObjectField24 = createField("ActivatedById", "Activated By ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField24);
        final SObjectField sObjectField25 = createField("ActivatedDate", "Activated Date", "datetime", "xsd:dateTime", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField25);
        final SObjectField sObjectField26 = createField("StatusCode", "Status Category", "picklist", "xsd:string", 40, false, false, false, false, false, false, false);
        fields1.add(sObjectField26);
        final SObjectField sObjectField27 = createField("Description", "Description", "textarea", "xsd:string", 32000, false, true, false, false, false, false, false);
        fields1.add(sObjectField27);
        final SObjectField sObjectField28 = createField("IsDeleted", "Deleted", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField28);
        final SObjectField sObjectField29 = createField("ContractNumber", "Contract Number", "string", "xsd:string", 30, false, false, true, false, false, false, true);
        fields1.add(sObjectField29);
        final SObjectField sObjectField30 = createField("LastApprovedDate", "Last Approved Date", "datetime", "xsd:dateTime", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField30);
        final SObjectField sObjectField31 = createField("CreatedDate", "Created Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField31);
        final SObjectField sObjectField32 = createField("CreatedById", "Created By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField32);
        final SObjectField sObjectField33 = createField("LastModifiedDate", "Last Modified Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField33);
        final SObjectField sObjectField34 = createField("LastModifiedById", "Last Modified By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField34);
        final SObjectField sObjectField35 = createField("SystemModstamp", "System Modstamp", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField35);
        final SObjectField sObjectField36 = createField("LastActivityDate", "Last Activity", "date", "xsd:date", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField36);
        final SObjectField sObjectField37 = createField("LastViewedDate", "Last Viewed Date", "datetime", "xsd:dateTime", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField37);
        final SObjectField sObjectField38 = createField("LastReferencedDate", "Last Referenced Date", "datetime", "xsd:dateTime", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField38);

        description.setLabel("Contract");
        description.setLabelPlural("Contracts");
        description.setName("Contract");

        final SObjectDescriptionUrls sObjectDescriptionUrls1 = new SObjectDescriptionUrls();
        sObjectDescriptionUrls1.setApprovalLayouts("/services/data/v34.0/sobjects/Contract/describe/approvalLayouts");
        sObjectDescriptionUrls1.setCompactLayouts("/services/data/v34.0/sobjects/Contract/describe/compactLayouts");
        sObjectDescriptionUrls1.setDescribe("/services/data/v34.0/sobjects/Contract/describe");
        sObjectDescriptionUrls1.setLayouts("/services/data/v34.0/sobjects/Contract/describe/layouts");
        sObjectDescriptionUrls1.setListviews("/services/data/v34.0/sobjects/Contract/listviews");
        sObjectDescriptionUrls1.setQuickActions("/services/data/v34.0/sobjects/Contract/quickActions");
        sObjectDescriptionUrls1.setRowTemplate("/services/data/v34.0/sobjects/Contract/{ID}");
        sObjectDescriptionUrls1.setSobject("/services/data/v34.0/sobjects/Contract");
        sObjectDescriptionUrls1.setUiDetailTemplate("https://eu13.salesforce.com/{ID}");
        sObjectDescriptionUrls1.setUiEditTemplate("https://eu13.salesforce.com/{ID}/e");
        sObjectDescriptionUrls1.setUiNewRecord("https://eu13.salesforce.com/800/e");
        description.setUrls(sObjectDescriptionUrls1);

        return description;
    }
}
