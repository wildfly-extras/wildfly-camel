/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin.
 */
package org.wildfly.camel.test.salesforce.dto;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Generated;

import com.thoughtworks.xstream.annotations.XStreamAlias;
import com.thoughtworks.xstream.annotations.XStreamConverter;

import org.apache.camel.component.salesforce.api.PicklistEnumConverter;
import org.apache.camel.component.salesforce.api.dto.AbstractDescribedSObjectBase;
import org.apache.camel.component.salesforce.api.dto.Attributes;
import org.apache.camel.component.salesforce.api.dto.ChildRelationShip;
import org.apache.camel.component.salesforce.api.dto.InfoUrls;
import org.apache.camel.component.salesforce.api.dto.NamedLayoutInfo;
import org.apache.camel.component.salesforce.api.dto.RecordTypeInfo;
import org.apache.camel.component.salesforce.api.dto.SObjectDescription;
import org.apache.camel.component.salesforce.api.dto.SObjectDescriptionUrls;
import org.apache.camel.component.salesforce.api.dto.SObjectField;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Salesforce DTO for SObject Order
 */
@Generated("org.apache.camel.maven.CamelSalesforceMojo")
@XStreamAlias("Order")
public class Order extends AbstractDescribedSObjectBase {

    public Order() {
        getAttributes().setType("Order");
    }

    private static final SObjectDescription DESCRIPTION = createSObjectDescription();

    private String ContractId;

    @JsonProperty("ContractId")
    public String getContractId() {
        return this.ContractId;
    }

    @JsonProperty("ContractId")
    public void setContractId(String ContractId) {
        this.ContractId = ContractId;
    }

    private String AccountId;

    @JsonProperty("AccountId")
    public String getAccountId() {
        return this.AccountId;
    }

    @JsonProperty("AccountId")
    public void setAccountId(String AccountId) {
        this.AccountId = AccountId;
    }

    private String Pricebook2Id;

    @JsonProperty("Pricebook2Id")
    public String getPricebook2Id() {
        return this.Pricebook2Id;
    }

    @JsonProperty("Pricebook2Id")
    public void setPricebook2Id(String Pricebook2Id) {
        this.Pricebook2Id = Pricebook2Id;
    }

    private String OriginalOrderId;

    @JsonProperty("OriginalOrderId")
    public String getOriginalOrderId() {
        return this.OriginalOrderId;
    }

    @JsonProperty("OriginalOrderId")
    public void setOriginalOrderId(String OriginalOrderId) {
        this.OriginalOrderId = OriginalOrderId;
    }

    private java.time.LocalDate EffectiveDate;

    @JsonProperty("EffectiveDate")
    public java.time.LocalDate getEffectiveDate() {
        return this.EffectiveDate;
    }

    @JsonProperty("EffectiveDate")
    public void setEffectiveDate(java.time.LocalDate EffectiveDate) {
        this.EffectiveDate = EffectiveDate;
    }

    private java.time.LocalDate EndDate;

    @JsonProperty("EndDate")
    public java.time.LocalDate getEndDate() {
        return this.EndDate;
    }

    @JsonProperty("EndDate")
    public void setEndDate(java.time.LocalDate EndDate) {
        this.EndDate = EndDate;
    }

    private Boolean IsReductionOrder;

    @JsonProperty("IsReductionOrder")
    public Boolean getIsReductionOrder() {
        return this.IsReductionOrder;
    }

    @JsonProperty("IsReductionOrder")
    public void setIsReductionOrder(Boolean IsReductionOrder) {
        this.IsReductionOrder = IsReductionOrder;
    }

    @XStreamConverter(PicklistEnumConverter.class)
    private Order_StatusEnum Status;

    @JsonProperty("Status")
    public Order_StatusEnum getStatus() {
        return this.Status;
    }

    @JsonProperty("Status")
    public void setStatus(Order_StatusEnum Status) {
        this.Status = Status;
    }

    private String Description;

    @JsonProperty("Description")
    public String getDescription() {
        return this.Description;
    }

    @JsonProperty("Description")
    public void setDescription(String Description) {
        this.Description = Description;
    }

    private String CustomerAuthorizedById;

    @JsonProperty("CustomerAuthorizedById")
    public String getCustomerAuthorizedById() {
        return this.CustomerAuthorizedById;
    }

    @JsonProperty("CustomerAuthorizedById")
    public void setCustomerAuthorizedById(String CustomerAuthorizedById) {
        this.CustomerAuthorizedById = CustomerAuthorizedById;
    }

    private java.time.LocalDate CustomerAuthorizedDate;

    @JsonProperty("CustomerAuthorizedDate")
    public java.time.LocalDate getCustomerAuthorizedDate() {
        return this.CustomerAuthorizedDate;
    }

    @JsonProperty("CustomerAuthorizedDate")
    public void setCustomerAuthorizedDate(java.time.LocalDate CustomerAuthorizedDate) {
        this.CustomerAuthorizedDate = CustomerAuthorizedDate;
    }

    private String CompanyAuthorizedById;

    @JsonProperty("CompanyAuthorizedById")
    public String getCompanyAuthorizedById() {
        return this.CompanyAuthorizedById;
    }

    @JsonProperty("CompanyAuthorizedById")
    public void setCompanyAuthorizedById(String CompanyAuthorizedById) {
        this.CompanyAuthorizedById = CompanyAuthorizedById;
    }

    private java.time.LocalDate CompanyAuthorizedDate;

    @JsonProperty("CompanyAuthorizedDate")
    public java.time.LocalDate getCompanyAuthorizedDate() {
        return this.CompanyAuthorizedDate;
    }

    @JsonProperty("CompanyAuthorizedDate")
    public void setCompanyAuthorizedDate(java.time.LocalDate CompanyAuthorizedDate) {
        this.CompanyAuthorizedDate = CompanyAuthorizedDate;
    }

    @XStreamConverter(PicklistEnumConverter.class)
    private Order_TypeEnum Type;

    @JsonProperty("Type")
    public Order_TypeEnum getType() {
        return this.Type;
    }

    @JsonProperty("Type")
    public void setType(Order_TypeEnum Type) {
        this.Type = Type;
    }

    private String BillingStreet;

    @JsonProperty("BillingStreet")
    public String getBillingStreet() {
        return this.BillingStreet;
    }

    @JsonProperty("BillingStreet")
    public void setBillingStreet(String BillingStreet) {
        this.BillingStreet = BillingStreet;
    }

    private String BillingCity;

    @JsonProperty("BillingCity")
    public String getBillingCity() {
        return this.BillingCity;
    }

    @JsonProperty("BillingCity")
    public void setBillingCity(String BillingCity) {
        this.BillingCity = BillingCity;
    }

    private String BillingState;

    @JsonProperty("BillingState")
    public String getBillingState() {
        return this.BillingState;
    }

    @JsonProperty("BillingState")
    public void setBillingState(String BillingState) {
        this.BillingState = BillingState;
    }

    private String BillingPostalCode;

    @JsonProperty("BillingPostalCode")
    public String getBillingPostalCode() {
        return this.BillingPostalCode;
    }

    @JsonProperty("BillingPostalCode")
    public void setBillingPostalCode(String BillingPostalCode) {
        this.BillingPostalCode = BillingPostalCode;
    }

    private String BillingCountry;

    @JsonProperty("BillingCountry")
    public String getBillingCountry() {
        return this.BillingCountry;
    }

    @JsonProperty("BillingCountry")
    public void setBillingCountry(String BillingCountry) {
        this.BillingCountry = BillingCountry;
    }

    private Double BillingLatitude;

    @JsonProperty("BillingLatitude")
    public Double getBillingLatitude() {
        return this.BillingLatitude;
    }

    @JsonProperty("BillingLatitude")
    public void setBillingLatitude(Double BillingLatitude) {
        this.BillingLatitude = BillingLatitude;
    }

    private Double BillingLongitude;

    @JsonProperty("BillingLongitude")
    public Double getBillingLongitude() {
        return this.BillingLongitude;
    }

    @JsonProperty("BillingLongitude")
    public void setBillingLongitude(Double BillingLongitude) {
        this.BillingLongitude = BillingLongitude;
    }

    private org.apache.camel.component.salesforce.api.dto.Address BillingAddress;

    @JsonProperty("BillingAddress")
    public org.apache.camel.component.salesforce.api.dto.Address getBillingAddress() {
        return this.BillingAddress;
    }

    @JsonProperty("BillingAddress")
    public void setBillingAddress(org.apache.camel.component.salesforce.api.dto.Address BillingAddress) {
        this.BillingAddress = BillingAddress;
    }

    private String ShippingStreet;

    @JsonProperty("ShippingStreet")
    public String getShippingStreet() {
        return this.ShippingStreet;
    }

    @JsonProperty("ShippingStreet")
    public void setShippingStreet(String ShippingStreet) {
        this.ShippingStreet = ShippingStreet;
    }

    private String ShippingCity;

    @JsonProperty("ShippingCity")
    public String getShippingCity() {
        return this.ShippingCity;
    }

    @JsonProperty("ShippingCity")
    public void setShippingCity(String ShippingCity) {
        this.ShippingCity = ShippingCity;
    }

    private String ShippingState;

    @JsonProperty("ShippingState")
    public String getShippingState() {
        return this.ShippingState;
    }

    @JsonProperty("ShippingState")
    public void setShippingState(String ShippingState) {
        this.ShippingState = ShippingState;
    }

    private String ShippingPostalCode;

    @JsonProperty("ShippingPostalCode")
    public String getShippingPostalCode() {
        return this.ShippingPostalCode;
    }

    @JsonProperty("ShippingPostalCode")
    public void setShippingPostalCode(String ShippingPostalCode) {
        this.ShippingPostalCode = ShippingPostalCode;
    }

    private String ShippingCountry;

    @JsonProperty("ShippingCountry")
    public String getShippingCountry() {
        return this.ShippingCountry;
    }

    @JsonProperty("ShippingCountry")
    public void setShippingCountry(String ShippingCountry) {
        this.ShippingCountry = ShippingCountry;
    }

    private Double ShippingLatitude;

    @JsonProperty("ShippingLatitude")
    public Double getShippingLatitude() {
        return this.ShippingLatitude;
    }

    @JsonProperty("ShippingLatitude")
    public void setShippingLatitude(Double ShippingLatitude) {
        this.ShippingLatitude = ShippingLatitude;
    }

    private Double ShippingLongitude;

    @JsonProperty("ShippingLongitude")
    public Double getShippingLongitude() {
        return this.ShippingLongitude;
    }

    @JsonProperty("ShippingLongitude")
    public void setShippingLongitude(Double ShippingLongitude) {
        this.ShippingLongitude = ShippingLongitude;
    }

    private org.apache.camel.component.salesforce.api.dto.Address ShippingAddress;

    @JsonProperty("ShippingAddress")
    public org.apache.camel.component.salesforce.api.dto.Address getShippingAddress() {
        return this.ShippingAddress;
    }

    @JsonProperty("ShippingAddress")
    public void setShippingAddress(org.apache.camel.component.salesforce.api.dto.Address ShippingAddress) {
        this.ShippingAddress = ShippingAddress;
    }

    private java.time.LocalDate PoDate;

    @JsonProperty("PoDate")
    public java.time.LocalDate getPoDate() {
        return this.PoDate;
    }

    @JsonProperty("PoDate")
    public void setPoDate(java.time.LocalDate PoDate) {
        this.PoDate = PoDate;
    }

    private String PoNumber;

    @JsonProperty("PoNumber")
    public String getPoNumber() {
        return this.PoNumber;
    }

    @JsonProperty("PoNumber")
    public void setPoNumber(String PoNumber) {
        this.PoNumber = PoNumber;
    }

    private String OrderReferenceNumber;

    @JsonProperty("OrderReferenceNumber")
    public String getOrderReferenceNumber() {
        return this.OrderReferenceNumber;
    }

    @JsonProperty("OrderReferenceNumber")
    public void setOrderReferenceNumber(String OrderReferenceNumber) {
        this.OrderReferenceNumber = OrderReferenceNumber;
    }

    private String BillToContactId;

    @JsonProperty("BillToContactId")
    public String getBillToContactId() {
        return this.BillToContactId;
    }

    @JsonProperty("BillToContactId")
    public void setBillToContactId(String BillToContactId) {
        this.BillToContactId = BillToContactId;
    }

    private String ShipToContactId;

    @JsonProperty("ShipToContactId")
    public String getShipToContactId() {
        return this.ShipToContactId;
    }

    @JsonProperty("ShipToContactId")
    public void setShipToContactId(String ShipToContactId) {
        this.ShipToContactId = ShipToContactId;
    }

    private java.time.ZonedDateTime ActivatedDate;

    @JsonProperty("ActivatedDate")
    public java.time.ZonedDateTime getActivatedDate() {
        return this.ActivatedDate;
    }

    @JsonProperty("ActivatedDate")
    public void setActivatedDate(java.time.ZonedDateTime ActivatedDate) {
        this.ActivatedDate = ActivatedDate;
    }

    private String ActivatedById;

    @JsonProperty("ActivatedById")
    public String getActivatedById() {
        return this.ActivatedById;
    }

    @JsonProperty("ActivatedById")
    public void setActivatedById(String ActivatedById) {
        this.ActivatedById = ActivatedById;
    }

    @XStreamConverter(PicklistEnumConverter.class)
    private Order_StatusCodeEnum StatusCode;

    @JsonProperty("StatusCode")
    public Order_StatusCodeEnum getStatusCode() {
        return this.StatusCode;
    }

    @JsonProperty("StatusCode")
    public void setStatusCode(Order_StatusCodeEnum StatusCode) {
        this.StatusCode = StatusCode;
    }

    private String OrderNumber;

    @JsonProperty("OrderNumber")
    public String getOrderNumber() {
        return this.OrderNumber;
    }

    @JsonProperty("OrderNumber")
    public void setOrderNumber(String OrderNumber) {
        this.OrderNumber = OrderNumber;
    }

    private Double TotalAmount;

    @JsonProperty("TotalAmount")
    public Double getTotalAmount() {
        return this.TotalAmount;
    }

    @JsonProperty("TotalAmount")
    public void setTotalAmount(Double TotalAmount) {
        this.TotalAmount = TotalAmount;
    }

     private QueryRecordsOrder Orders;

    @JsonProperty("Orders")
    public QueryRecordsOrder getOrders() {
        return Orders;
    }

    @JsonProperty("Orders")
    public void setOrders(QueryRecordsOrder Orders) {
        this.Orders = Orders;
    }

    @Override
    public final SObjectDescription description() {
        return DESCRIPTION;
    }

    private static SObjectDescription createSObjectDescription() {
        final SObjectDescription description = new SObjectDescription();



        final List<SObjectField> fields1 = new ArrayList<>();
        description.setFields(fields1);

        final SObjectField sObjectField1 = createField("Id", "Order ID", "id", "tns:ID", 18, false, false, false, false, false, false, true);
        fields1.add(sObjectField1);
        final SObjectField sObjectField2 = createField("OwnerId", "Owner ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField2);
        final SObjectField sObjectField3 = createField("ContractId", "Contract ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField3);
        final SObjectField sObjectField4 = createField("AccountId", "Account ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField4);
        final SObjectField sObjectField5 = createField("Pricebook2Id", "Price Book ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField5);
        final SObjectField sObjectField6 = createField("OriginalOrderId", "Order ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField6);
        final SObjectField sObjectField7 = createField("EffectiveDate", "Order Start Date", "date", "xsd:date", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField7);
        final SObjectField sObjectField8 = createField("EndDate", "Order End Date", "date", "xsd:date", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField8);
        final SObjectField sObjectField9 = createField("IsReductionOrder", "Reduction Order", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField9);
        final SObjectField sObjectField10 = createField("Status", "Status", "picklist", "xsd:string", 40, false, false, false, false, false, false, false);
        fields1.add(sObjectField10);
        final SObjectField sObjectField11 = createField("Description", "Description", "textarea", "xsd:string", 32000, false, true, false, false, false, false, false);
        fields1.add(sObjectField11);
        final SObjectField sObjectField12 = createField("CustomerAuthorizedById", "Customer Authorized By ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField12);
        final SObjectField sObjectField13 = createField("CustomerAuthorizedDate", "Customer Authorized Date", "date", "xsd:date", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField13);
        final SObjectField sObjectField14 = createField("CompanyAuthorizedById", "Company Authorized By ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField14);
        final SObjectField sObjectField15 = createField("CompanyAuthorizedDate", "Company Authorized Date", "date", "xsd:date", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField15);
        final SObjectField sObjectField16 = createField("Type", "Order Type", "picklist", "xsd:string", 40, false, true, false, false, false, false, false);
        fields1.add(sObjectField16);
        final SObjectField sObjectField17 = createField("BillingStreet", "Billing Street", "textarea", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField17);
        final SObjectField sObjectField18 = createField("BillingCity", "Billing City", "string", "xsd:string", 40, false, true, false, false, false, false, false);
        fields1.add(sObjectField18);
        final SObjectField sObjectField19 = createField("BillingState", "Billing State/Province", "string", "xsd:string", 80, false, true, false, false, false, false, false);
        fields1.add(sObjectField19);
        final SObjectField sObjectField20 = createField("BillingPostalCode", "Billing Zip/Postal Code", "string", "xsd:string", 20, false, true, false, false, false, false, false);
        fields1.add(sObjectField20);
        final SObjectField sObjectField21 = createField("BillingCountry", "Billing Country", "string", "xsd:string", 80, false, true, false, false, false, false, false);
        fields1.add(sObjectField21);
        final SObjectField sObjectField22 = createField("BillingLatitude", "Billing Latitude", "double", "xsd:double", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField22);
        final SObjectField sObjectField23 = createField("BillingLongitude", "Billing Longitude", "double", "xsd:double", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField23);
        final SObjectField sObjectField24 = createField("BillingAddress", "Billing Address", "address", "urn:address", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField24);
        final SObjectField sObjectField25 = createField("ShippingStreet", "Shipping Street", "textarea", "xsd:string", 255, false, true, false, false, false, false, false);
        fields1.add(sObjectField25);
        final SObjectField sObjectField26 = createField("ShippingCity", "Shipping City", "string", "xsd:string", 40, false, true, false, false, false, false, false);
        fields1.add(sObjectField26);
        final SObjectField sObjectField27 = createField("ShippingState", "Shipping State/Province", "string", "xsd:string", 80, false, true, false, false, false, false, false);
        fields1.add(sObjectField27);
        final SObjectField sObjectField28 = createField("ShippingPostalCode", "Shipping Zip/Postal Code", "string", "xsd:string", 20, false, true, false, false, false, false, false);
        fields1.add(sObjectField28);
        final SObjectField sObjectField29 = createField("ShippingCountry", "Shipping Country", "string", "xsd:string", 80, false, true, false, false, false, false, false);
        fields1.add(sObjectField29);
        final SObjectField sObjectField30 = createField("ShippingLatitude", "Shipping Latitude", "double", "xsd:double", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField30);
        final SObjectField sObjectField31 = createField("ShippingLongitude", "Shipping Longitude", "double", "xsd:double", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField31);
        final SObjectField sObjectField32 = createField("ShippingAddress", "Shipping Address", "address", "urn:address", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField32);
        final SObjectField sObjectField33 = createField("Name", "Order Name", "string", "xsd:string", 80, false, true, false, false, false, false, false);
        fields1.add(sObjectField33);
        final SObjectField sObjectField34 = createField("PoDate", "PO Date", "date", "xsd:date", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField34);
        final SObjectField sObjectField35 = createField("PoNumber", "PO Number", "string", "xsd:string", 80, false, true, false, false, false, false, false);
        fields1.add(sObjectField35);
        final SObjectField sObjectField36 = createField("OrderReferenceNumber", "Order Reference Number", "string", "xsd:string", 80, false, true, false, false, false, false, false);
        fields1.add(sObjectField36);
        final SObjectField sObjectField37 = createField("BillToContactId", "Bill To Contact ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField37);
        final SObjectField sObjectField38 = createField("ShipToContactId", "Ship To Contact ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField38);
        final SObjectField sObjectField39 = createField("ActivatedDate", "Activated Date", "datetime", "xsd:dateTime", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField39);
        final SObjectField sObjectField40 = createField("ActivatedById", "Activated By ID", "reference", "tns:ID", 18, false, true, false, false, false, false, false);
        fields1.add(sObjectField40);
        final SObjectField sObjectField41 = createField("StatusCode", "Status Category", "picklist", "xsd:string", 40, false, false, false, false, false, false, false);
        fields1.add(sObjectField41);
        final SObjectField sObjectField42 = createField("OrderNumber", "Order Number", "string", "xsd:string", 30, false, false, true, false, false, false, true);
        fields1.add(sObjectField42);
        final SObjectField sObjectField43 = createField("TotalAmount", "Order Amount", "currency", "xsd:double", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField43);
        final SObjectField sObjectField44 = createField("CreatedDate", "Created Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField44);
        final SObjectField sObjectField45 = createField("CreatedById", "Created By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField45);
        final SObjectField sObjectField46 = createField("LastModifiedDate", "Last Modified Date", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField46);
        final SObjectField sObjectField47 = createField("LastModifiedById", "Last Modified By ID", "reference", "tns:ID", 18, false, false, false, false, false, false, false);
        fields1.add(sObjectField47);
        final SObjectField sObjectField48 = createField("IsDeleted", "Deleted", "boolean", "xsd:boolean", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField48);
        final SObjectField sObjectField49 = createField("SystemModstamp", "System Modstamp", "datetime", "xsd:dateTime", 0, false, false, false, false, false, false, false);
        fields1.add(sObjectField49);
        final SObjectField sObjectField50 = createField("LastViewedDate", "Last Viewed Date", "datetime", "xsd:dateTime", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField50);
        final SObjectField sObjectField51 = createField("LastReferencedDate", "Last Referenced Date", "datetime", "xsd:dateTime", 0, false, true, false, false, false, false, false);
        fields1.add(sObjectField51);

        description.setLabel("Order");
        description.setLabelPlural("Orders");
        description.setName("Order");

        final SObjectDescriptionUrls sObjectDescriptionUrls1 = new SObjectDescriptionUrls();
        sObjectDescriptionUrls1.setApprovalLayouts("/services/data/v34.0/sobjects/Order/describe/approvalLayouts");
        sObjectDescriptionUrls1.setCompactLayouts("/services/data/v34.0/sobjects/Order/describe/compactLayouts");
        sObjectDescriptionUrls1.setDescribe("/services/data/v34.0/sobjects/Order/describe");
        sObjectDescriptionUrls1.setLayouts("/services/data/v34.0/sobjects/Order/describe/layouts");
        sObjectDescriptionUrls1.setQuickActions("/services/data/v34.0/sobjects/Order/quickActions");
        sObjectDescriptionUrls1.setRowTemplate("/services/data/v34.0/sobjects/Order/{ID}");
        sObjectDescriptionUrls1.setSobject("/services/data/v34.0/sobjects/Order");
        sObjectDescriptionUrls1.setUiDetailTemplate("https://eu13.salesforce.com/{ID}");
        sObjectDescriptionUrls1.setUiEditTemplate("https://eu13.salesforce.com/{ID}/e");
        sObjectDescriptionUrls1.setUiNewRecord("https://eu13.salesforce.com/801/e");
        description.setUrls(sObjectDescriptionUrls1);

        return description;
    }
}
